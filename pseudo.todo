Models:
***** User *****
    User (
        id
        login
        email
        encrypted_password (password)
        registration date
        token (for api requests)
        contacts
        role
    ) ??? information about user entity
    Roles (
        user
        admin
    ) ??? roles
    Balance History (
        id
        value (money)
        from (transaction bank/agent/system)
        date (date of receipt money)
        additional info
        from_user
    ) ??? History of receipt money from user
    Plans_list (
        id,
        name
        ...
        info about plan
        ? flag for avaliable or not
    ) ??? For programming manupulation
    User_Plans (
        id,
        plan_name,
        ? maybe plan id for searching plan params
    ) ??? Current user plan
    Payment info (
        ... empty ...
    ) ??? no info
    Refresh Tokens (
        id 
        token
        user
        last update date
    ) ??? Refresh tokens for jwt refresh

***** Support *****
    Ticket (
        id
        title 
        description
        question section
        from (user who asked)
        helper (admi who asked)
        creation date
    ) ??? Information about user question
    Ticket message (
        id
        who (any user who reply)
        messagge
        reply date
    ) ??? Messages 
    Resources (
        id
        path to (path to resouse in the os)
        filename
        upload date
    ) ??? All resources uploaded to server

Endpoints:
    User:
        login
        registration
        refresh_jwt_token
        update_info_about_user
    Balance:
        add balance
        write off balance
    Support:
        get all tickets by user id
        find ticket by ticket id
        find all messages by ticket id
        add message
        change ticket status

Migrate:
    create_migration: 
        migrate create -ext sql -dir (dir_name) (migration_name)
    execute_migration:
        migrate -path (dir_name) -database (database_url) (type_of_migration|up||drown)

TODO:
    ✔ Test validations @done(20-04-01 16:02)
    ✔ Test token generation @done(20-04-01 16:02)
    ☐ Добавить метод createBalance() в Create() юзера
    ✔ Придумать куда запихать месседжы из тикетов @done(20-04-02 13:00)
    ✔ Регистрация @done(20-04-06 19:30)
    ✔ Логин @done(20-04-06 19:30)
    ✔ Jwt auth @done(20-04-06 19:30)
    ✔ Jwt refresh @done(20-04-06 19:30)
    ☐ Middleware authenticate 
        Потом проверить существующий тест


    
